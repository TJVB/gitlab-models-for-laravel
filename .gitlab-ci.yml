# set the default docker image
image: registry.gitlab.com/tjvb/phpimages:php81

stages:
  - prepare # prepare the cache
  - check # check the codestyles
  - test
  - documentation

prepare_cache:
  stage: prepare
  script:
    - composer validate
    - composer install
  # we use this artifact for all the jobs
  artifacts:
    name: "vendor"
    paths:
      - vendor/*

lint:
  stage: check
  script:
    # lint recursive
    - find src/ -type f -name '*.php' -exec php -l {} \; | (! grep -v "No syntax errors detected" )
  dependencies: []
  needs: []

phpcs:
  stage: check
  script:
    - vendor/bin/phpcs
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

phpmd:
  stage: check
  script:
    - vendor/bin/phpmd src/ text phpmd.xml.dist
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

phpstan:
  stage: check
  script:
    # check for phpstan errors
    - php -d memory_limit=500M vendor/bin/phpstan analyse --error-format=gitlab > phpstan.json
    - cat phpstan.json
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache
  artifacts:
    paths:
      - phpstan.json
    when: always


infection:
  stage: test
  interruptible: true
  script:
    - composer install
    - vendor/bin/infection
  artifacts:
    name: "Infection result ${CI_PROJECT_NAME}_${CI_PIPELINE_ID}"
    when: always
    paths:
      - build/infection/infection.log
      - build/infection/infection.html
      - build/infection/infection-summary.log
      - build/infection/infection-log.json
      - build/infection/infection-per-mutator.md
    expire_in: 1 day
    expose_as: Infection log
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

# this is a template for the test jobs and have the config that is used for all the test jobs
.test_base:
  stage: test
  coverage:  '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    paths:
      - phpunitresult/
    reports:
      junit: phpunitresult/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: phpunitresult/cobertura-coverage.xml
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

test_lowest:
  extends: .test_base
  script:
    # Install composer
    - rm -f composer.lock
    - curl -sS https://getcomposer.org/installer | php
    - composer update --prefer-lowest
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml --coverage-html=phpunitresult/coverage
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml


test:
  parallel:
    matrix:
      - LARAVEL: 9
        TESTBENCH: 7
        PHP:
          - 81
          - 82
      - LARAVEL: 10
        TESTBENCH: 8
        PHP:
          - 81
          - 82
  extends: .test_base
  image: registry.gitlab.com/tjvb/phpimages:php$PHP
  script:
    - echo "Laravel $LARAVEL"
    - echo "PHP $PHP"
    - echo "TESTBENCH $TESTBENCH"
    - composer require --dev "orchestra/testbench=^$TESTBENCH"
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml

pages:
  stage: documentation
  interruptible: true
  image: daux/daux.io
  script:
    - cp docs/Introduction.md docs/_index.md
    - cp README.md docs/+1README.md
    - cp CHANGELOG.md docs/+2CHANGELOG.md
    - cp LICENSE.md docs/-LICENSE.md
    - cp CONTRIBUTING.md docs/-CONTRIBUTING.md
    - daux generate
    - mv static public
    - cp -R phpunitresult/coverage public/coverage
    - cp build/infection/infection.html public/infection.html
  artifacts:
    paths:
      - public
  dependencies:
    - infection
    - test_lowest
  needs:
    - test_lowest
    - infection